// Generated by view binder compiler. Do not edit!
package com.example.imc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.imc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText editTextNumberAltura;

  @NonNull
  public final EditText editTextNumberPeso;

  @NonNull
  public final EditText editTextTextPersonName;

  @NonNull
  public final TextView textViewAltura;

  @NonNull
  public final TextView textViewNome;

  @NonNull
  public final TextView textViewPeso;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull EditText editTextNumberAltura, @NonNull EditText editTextNumberPeso,
      @NonNull EditText editTextTextPersonName, @NonNull TextView textViewAltura,
      @NonNull TextView textViewNome, @NonNull TextView textViewPeso) {
    this.rootView = rootView;
    this.button = button;
    this.editTextNumberAltura = editTextNumberAltura;
    this.editTextNumberPeso = editTextNumberPeso;
    this.editTextTextPersonName = editTextTextPersonName;
    this.textViewAltura = textViewAltura;
    this.textViewNome = textViewNome;
    this.textViewPeso = textViewPeso;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.editTextNumberAltura;
      EditText editTextNumberAltura = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumberAltura == null) {
        break missingId;
      }

      id = R.id.editTextNumberPeso;
      EditText editTextNumberPeso = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumberPeso == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName;
      EditText editTextTextPersonName = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName == null) {
        break missingId;
      }

      id = R.id.textViewAltura;
      TextView textViewAltura = ViewBindings.findChildViewById(rootView, id);
      if (textViewAltura == null) {
        break missingId;
      }

      id = R.id.textViewNome;
      TextView textViewNome = ViewBindings.findChildViewById(rootView, id);
      if (textViewNome == null) {
        break missingId;
      }

      id = R.id.textViewPeso;
      TextView textViewPeso = ViewBindings.findChildViewById(rootView, id);
      if (textViewPeso == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, button, editTextNumberAltura,
          editTextNumberPeso, editTextTextPersonName, textViewAltura, textViewNome, textViewPeso);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
